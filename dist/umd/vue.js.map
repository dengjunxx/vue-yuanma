{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parse-html.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["export function isObject(data) {\r\n    return typeof data === 'object' && data !== null\r\n}\r\nexport function def(data,key,value) {\r\n    Object.defineProperty(data,key,{\r\n        enumerable:false,\r\n        configurable:false,\r\n        value,\r\n    });\r\n}\r\n","//首先明确需要重写的都有哪些数组的方法，push,pop,shift,unshift,sort,reverse,splice，这些都是会导致数组本身发生变化的方法\r\n//slice不会改变数组本身，这样的方法不需要去劫持\r\n\r\nlet oldArrayMethods = Array.prototype;//首先把数组原有方法保存一份\r\n/*\r\n* Object.create在内部可以再创建一个对象，非原来的oldArrayMethods，\r\n* 相当于 arrayMethods.__proto__ = oldArrayMethods\r\n*用户会这么value.__proto__ = arrayMethods;\r\n* 当调用value.push时，首先找arrayMethods的push方法，如果没有，顺着原型链__proto__网上找到oldArrayMethods\r\n* 当调用slice，因为arrayMethods里没有重写这个方法，所以会找oldArrayMethods中的slice\r\n */\r\nexport const arrayMethods = Object.create(oldArrayMethods);\r\nconst methods = ['push','pop','shift','unshift','sort','reserve','splice'];\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function (...arg) {\r\n        console.log(`用户调用了${method}方法`);\r\n        const result = oldArrayMethods[method].apply(this,arg);//调用原生数组的方法\r\n        //当调用push,unshift,splice这种能够给数组新增属性的方法时，需要判断，如果新增的也是个对象，也要监控\r\n        let inserted;//记录用户当前插入的元素\r\n        let ob = this['__ob__'];//拿到value上挂在的__ob__属性;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = arg;//arr.push(xxx);中的xxx就是插入的元素，也是方法的arg\r\n                break;\r\n            case 'splice'://splice有三参数，有删除，新增的功能arr.splice(0,1,{name:1});\r\n                inserted = arg.slice(2);//把arg的第二个参数截取出来\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted) {\r\n            ob.observeArray(inserted);\r\n        }//如果inserted存在，把它监控起来\r\n        return result;\r\n    }\r\n});\r\n\r\n","//把data中的数据都使用Object.defineProperty重新定义\r\n//Object.defineProperty是es5语法，不兼容ie8及以下版本，所以vue2不能兼容ie8以下版本\r\nimport {isObject,def} from '../util/index'\r\nimport {arrayMethods} from './array.js'\r\n\r\n//通过这个类，后续可以得知数据是不是一个已经被观测了的数据，后面需要互相调用\r\nclass Observer {\r\n    constructor(value) {//constructor只做初始化的操作\r\n        //vue的缺陷，如果数据的层次太多，需要递归解析对象中的属性，依次添加get和set方法\r\n        //所以vue3中使用了proxy，不需要递归，也不需要set 和 get\r\n        /*\r\n        * 这里data数据第一次进来的时候肯定是个对象，但是第二次以后就有可能进来的是数组了\r\n        * 而且不能对数组的索引进行监控，性能不好，但是需要对数组里的对象进行监控\r\n        * */\r\n        //value.__ob__ = this;//把观测者Observer放到value的__ob__属性上\r\n        //__ob__可描述此对象已是否被观测\r\n        def(value,'__ob__',this);\r\n        if(Array.isArray(value)){\r\n            /*\r\n             * 如果是数组，不要对数组的索引进行观测,前端开发中很少对数组的索引进行操作\r\n             * 如果数组里放的是对象，再进行监控\r\n             * 需要重写数组的方法，push,shift,unshift，value.__proto__ = xxx\r\n             */\r\n            value.__proto__ = arrayMethods; //装饰模式，函数的劫持\r\n            this.observeArray(value);//遍历数组\r\n        }else {\r\n            this.walk(value);//遍历对象，对对象进行监控\r\n        }\r\n    }\r\n    observeArray(value){\r\n        value.forEach(val=>{\r\n            observe(val);//对数组中的每个对象进行监控\r\n            //当用户调用类似vm._data.name.push的方法时，也需要监控更新，需要重写array方法\r\n        })\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data);//拿到data中的key,一次重新定义属性[name,age,....]\r\n        keys.forEach(key => {\r\n            let value = data[key];\r\n            defineReactive(data, key, value);//vue响应式的核心方法，利用defineProperty给data上重新定义一个key，值是value;\r\n        })\r\n    }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n    observe(value);//利用递归原理，当value是object时，继续劫持里面的属性，绑定get和set;\r\n    Object.defineProperty(data, key, {\r\n        configurable:true,//是否可编辑\r\n        enumerable:false,//是否可枚举\r\n        get() {\r\n            //获取值的时候做一些操作\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            //改变值的时候做一些操作，依赖收集\r\n            console.log('更新数据');\r\n            if (newValue !== value) {\r\n                observe(newValue);//递归，当用户给vm._data中的属性值设置为新的对象时，继续劫持\r\n                value = newValue\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport function observe(data) {\r\n    //1.判断data是不死一个object\r\n    let isObj = isObject(data);\r\n    if (!isObj) {\r\n        return;\r\n    }\r\n    //写一个类，用来专门观测数据\r\n    return new Observer(data);\r\n}\r\n","import {observe} from './observer/index'\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    //vue的数据来源 属性，方法，数据，计算属性，watch（vue初始化的默认顺序）\r\n    if(opts.props){\r\n        initProps(vm);\r\n    }\r\n    if(opts.methods){\r\n        initMethods(vm);\r\n    }\r\n    if(opts.data){\r\n        initData(vm);\r\n    }\r\n    if(opts.computed){\r\n        initComputed(vm)\r\n    }\r\n    if(opts.watch){\r\n        initWatch(vm)\r\n    }\r\n}\r\nfunction initProps() {\r\n\r\n}\r\nfunction initMethods() {\r\n\r\n}\r\nfunction initData(vm) {\r\n//初始化data数据\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n    //data.call(vm) 是为了让data函数中的this指向vm\r\n    //对象劫持，用户改变了数据，我希望能够得到通知-->刷新页面\r\n    //MVVM模式，数据变化可以驱动视图变化\r\n    //Object.defineProperty() 给属性增加get和set方法\r\n\r\n    observe(data);//vue的核心响应式原理\r\n}\r\nfunction initComputed() {\r\n\r\n}\r\nfunction initWatch() {\r\n\r\n}\r\n","//ast语法树：用对象描述原生语法；虚拟dom：用对象来描述dom节点\r\n// arguments[0]代表匹配到的标签，arguments[1]代表匹配到的标签名字\r\n// Regular Expressions for parsing tags and attributes\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;//匹配属性的\r\n//<div id=\"asa\" ic='ffd' iq=sasa>\r\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\r\n// but for Vue templates we can enforce a simple charset\r\nconst ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';//abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;//?:匹配不捕获，<aaa:asas>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);//标签开头的正则，捕获的内容是标签名\r\nconst startTagClose = /^\\s*(\\/?)>/;//匹配标签结束的\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);//匹配标签结尾的</div>\r\nconst doctype = /^<!DOCTYPE [^>]+>/i;\r\nconst comment = /^<!--/;\r\nconst conditionalComment = /^<!\\[/;\r\n\r\nlet root = null;//ast语法树的树根\r\nlet currentParent;//标识出当前的父亲是谁\r\nlet stack = [];\r\nconst ELEMENT_TYPE = 1;\r\nconst TEXT_TYPE = 3;\r\n\r\nfunction createASTElement(tagName,attrs) {\r\n    //首先创建ast元素\r\n    return {\r\n        tag:tagName,\r\n        type:ELEMENT_TYPE,\r\n        children:[],\r\n        attrs,\r\n        parent:null\r\n    }\r\n}\r\n\r\nfunction start(tagName,tagAttrs) {\r\n    console.log('解析开始标签',tagName,'属性是',tagAttrs);\r\n    //遇到开始标签，就创建一个ast语法树\r\n    let element = createASTElement(tagName,tagAttrs);\r\n    if(!root){\r\n        root = element;\r\n    }\r\n    currentParent = element;//把当前标签标记为ast语法树\r\n    stack.push(element);//将开始标签放进栈数组里\r\n}\r\nfunction chars(text) {\r\n    console.log('文本标签(包括空格)',text);\r\n    //文本节点只需要判断是谁的儿子就行\r\n    text = text.replace(/\\s/g,'');//将空标签替换成''\r\n    if(text){\r\n        //说明文本标签有内容\r\n        currentParent.children.push({\r\n            text,\r\n            type:TEXT_TYPE\r\n        })\r\n    }\r\n}\r\nfunction end(tagName) {\r\n    console.log('解析结束标签',tagName);\r\n    //如果标签闭合了，需要判断这个标签是属于谁的\r\n    let element = stack.pop();//拿出数组中的最后一项\r\n    //我要标识出这个p是属于这个div的儿子的\r\n    currentParent = stack[stack.length-1];//拿到pop完之后的最后一项，就是刚才那项的父亲\r\n    if(currentParent){\r\n        //\r\n        element.parent = currentParent;\r\n        currentParent.children.push(element);\r\n\r\n    }\r\n}\r\n\r\nexport function parseHtml(html) {\r\n    //循环解析html字符串，一边解析一边截取掉html，直到完全截掉后while循环停止\r\n    while (html){\r\n        let textStart = html.indexOf('<');//匹配尖角号\r\n        if(textStart === 0){\r\n            //如果是0，表示是开始标签或者是结束标签\r\n            let startTagMatch = parseStartTag();//通过这个方法，获取匹配到的结果，tagName，attrs;\r\n            if(startTagMatch){\r\n                //如果是开始标签\r\n                start(startTagMatch.tagName,startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag);//匹配结尾标签\r\n            if(endTagMatch){\r\n                //如果是结束标签\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        if(textStart >= 0){\r\n            //不等于0，说明不是开始也不是结束，是一个文本标签\r\n            text = html.substring(0,textStart);\r\n            if(text){\r\n                advance(text.length);\r\n                chars(text);\r\n            }\r\n        }\r\n    }\r\n    function advance(n) {\r\n        //前进的方法,截取掉已经捕获的\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        //解析开始标签和里面的属性\r\n        let start = html.match(startTagOpen);\r\n        if(start){\r\n            const match = {\r\n                tagName:start[1],\r\n                attrs:[]\r\n            };\r\n            advance(start[0].length);//接去掉已经捕获了的\r\n            let end,attr;\r\n            //看看后面的是属性还是结束标签\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n                //如果匹配到的是一个属性，把它保存到attrs的数组里，再去掉\r\n                advance(attr[0].length);\r\n                match.attrs.push({\r\n                    name:attr[1],\r\n                    value:attr[3] || attr[4] || attr[5]\r\n                })\r\n            }\r\n            if(end){\r\n                //去掉开始标签的\">\"\r\n                advance(end[0].length);\r\n                return match;\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}\r\n","import {parseHtml} from './parse-html'\r\n/*\r\n* 判断标签是不是符合规范，比如是否正常闭合，\r\n* 匹配一个往数组里放一个，直到遇到第一个结束标签，看看这个结束标签类容是否和数组中的最后一项匹配\r\n* 如果匹配，删掉数组最后一项，继续往前匹配，直到数组为空，说明符合规范\r\n* 如果数组里最后还留了别的东西，说明不符合规范，比如有标签只写了开头，没写结尾\r\n* [div,p,span]\r\n* <div><p><span></span></p></div>\r\n* */\r\n\r\nfunction genProps(attrs) {\r\n    let str = '';\r\n    for(let i= 0;i<attrs.length;i++){\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style'){\r\n            //如果是一个样式属性，需要把属性携程对象{style:{color:'red'}}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key,value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`//后面用\",\"分隔开\r\n    }\r\n    return `{${str.slice(0,-1)}}`//截取掉最后一项是\",\"\r\n}\r\nfunction genChildren(el) {\r\n    //需要递归\r\n    let children = el.children;\r\n    if(children && children.length > 0){\r\n        return `${children.map(child=>gen(child)).join(',')}`\r\n    }\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\r\nfunction gen(node) {\r\n    if(node.type === 1){\r\n        return generate(node);//递归\r\n    }else {\r\n        let text = node.text;\r\n        let tokens = [];\r\n        let match,index;\r\n        let lastIndex = defaultTagRE.lastIndex = 0;//这里每次匹配完都需要把索引置为0\r\n        while (match = defaultTagRE.exec(text)){\r\n            index = match.index;\r\n            if(index > lastIndex){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`);\r\n            lastIndex = index + match[0].length;\r\n        }\r\n        if(lastIndex < text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n        }\r\n        //需要把a{{name}} b{{age}} c处理成 _v(\"a\"+_s(name)+\"b\"+_s(age)+\"c\")\r\n        return `_v(${tokens.join('+')})`;\r\n    }\r\n}\r\nfunction generate(el) {\r\n    let children = genChildren(el);\r\n    return `_c(\"${el.tag}\",${el.attrs.length?genProps(el.attrs):'undefined'}${children?`,${children}`:''})`;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // console.log(template);\r\n    let root = parseHtml(template);//获得ast语法树\r\n    // console.log(root);\r\n    //需要把ast语法树，生成最终的render函数，最终逻辑就是模板引擎字符串拼接；\r\n    //_c('div',{id:'app'},_c('p',undefined,_v(_s(name))),_c('span',undefined,_v(_s(age))))\r\n    let code = generate(root);\r\n    console.log(code,'code');\r\n    let renderFn = new Function(`with(this){ return ${code}}`);\r\n    console.log(renderFn);\r\n    return renderFn\r\n}\r\n// renderFn 相当于 function f() {\r\n//     with (this) {\r\n//         return '_c(\\'div\\',{id:\\'app\\'},_c(\\'p\\',undefined,_v(_s(name))),_c(\\'span\\',undefined,_v(_s(age))))'\r\n//     }\r\n// }\r\n// new Function能把字符串参数转换为对象\r\n// var str='{name:\"Helen\",age:\"22\",sex:\"female\"}';\r\n//\r\n// var obj=new Function('return '+str)();\r\n// console.log(obj.name);//Helen\r\n\r\n// function Parsejson(data){\r\n//     return (new Function('return '+data))();\r\n// }\r\n// var str=\"{'a':'123','b':'abc'}\";\r\n// var obj=Parsejson(str); //传入参数 str1\r\n// console.log(obj.b);\r\n// 如果传道入的 str 是number 类型 new Function 会把 str 当数值使用 例如 str = 123; 结果就是版123\r\n// 如果传入的 str 是非number类型 new Function 会把 str 当引用类型使用\r\n// 会去寻找 串的对象；\r\n// new Function()的参数是某个字符串，在使用时，编译器会将参数中的字符串当作正常的脚本代码来执行。利用这种方法来把字符串转对象，可以简单的想象成就是new出一个对象。\r\n\r\n// <div id=\"app\">\r\n//     <p>hello</p>\r\n// </div>\r\n// 截取一个，删除一个\r\n// start div: attrs:[{name:'id',value:'app'}];\r\n// start p\r\n// text hello\r\n// end p\r\n// end div\r\n// ast语法树\r\n// let root = {\r\n//     tag:'div',\r\n//     attrs:[{name:'id',value:'app'}],//标签的属性集合\r\n//     parent:null,//父节点\r\n//     type:1,//节点属性，1代表标签节点，3代表文本节点\r\n//     children:[//子元素\r\n//         {\r\n//             tag:'p',\r\n//             attrs:[],\r\n//             parent: root,\r\n//             type:1,\r\n//             children: [\r\n//                 {\r\n//                     text:'hello',\r\n//                     type:3\r\n//                 }\r\n//             ]\r\n//         }\r\n//     ]\r\n// };\r\n","//通过引入文件的方式，给vue原型上添加方法\r\nimport Vue from \"./index\";\r\nimport {initState} from './state'\r\nimport {compileToFunction} from './compiler/index.js'\r\nexport function initMixMin(Vue) {\r\n    //初始化流程\r\n    Vue.prototype._init = function (options) {\r\n        //首先需要做的就是数据的劫持\r\n         const vm = this;//vue中使用 this.$options 指代的就是用户传进来的属性\r\n         vm.$options = options;\r\n         //初始化状态\r\n         initState(vm);//分割状态\r\n\r\n        /*\r\n        * 如果用户传入了el属性，就需要实现挂载功能，将页面渲染出来*/\r\n        if(vm.$options.el){\r\n            //$mount原型上的方法\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    };\r\n    Vue.prototype.$mount = function (el) {\r\n        let vm = this;\r\n        let options = vm.$options;\r\n        el = document.querySelector(el);\r\n        //默认先取render，没有render取template，没template取el\r\n        if(!options.render){\r\n            //对模板进行编译\r\n            let template = options.template;//取出模板\r\n            if(!template && el){\r\n                template = el.outerHTML;\r\n            }\r\n            options.render = compileToFunction(template);\r\n            //要把template转换为render\r\n            // <div id=\"app\">\r\n            // <p>{{name}}</p>\r\n            // <span>{{age}}</span>\r\n            // </div>\r\n            // 转换为render大概是这个样子\r\n            // render(){\r\n            //     return _c('div',{id:'app'},_c('p',undefined,_v(_s(name))),_c('span',undefined,_v(_s(age))))\r\n            // }\r\n            //1.把dom标签转换成ast语法树\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","//这里是Vue核心配置,只是vue的一个声明\r\nimport {initMixMin} from './init'\r\nfunction Vue(options) {\r\n    //惊醒vue的初始化操作\r\n    this._init(options);\r\n}\r\n//在vue原型上扩展方法\r\ninitMixMin(Vue);//给vue原型上添加一个_init方法\r\nexport default Vue\r\n"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","arg","result","apply","inserted","ob","slice","observeArray","Observer","isArray","__proto__","walk","val","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","tagAttrs","element","push","chars","text","replace","end","pop","length","parseHtml","html","textStart","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","genProps","str","i","obj","split","item","JSON","stringify","genChildren","el","map","child","gen","join","defaultTagRE","node","generate","tokens","index","lastIndex","exec","trim","compileToFunction","template","code","renderFn","Function","initMixMin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}